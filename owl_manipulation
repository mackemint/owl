from PIL import Image
from PIL import ImageFilter

import time
import math

MULTIPLIER = 1.2

def rotate():

    owl_image = image.open(owl_pic)

    for i in range(10):
        owl_image.rotate(i*36).show()#.save(owl_pic)
        owl_image = image.open(owl_pic)
        time.sleep(0.5)

    return



def blur_image(pic):

    img = Image.open(pic)
    for i in range(100):
        img.filter(ImageFilter.BLUR)
    img.show()
    return


def conv(pic):

    last_colours = 0
    pic_name = get_new_name_for(pic)
    i = 0
    going_down = False
    while 1:
        #colours = int(math.ceil(math.pow(1.3,i)))
        color_float = math.pow(1.1,i*2)
        colours = int(color_float)
        print "colour depth: i=" +str(i)+"->colours="+str(colours)+" color_float=" + str(color_float)
        going_down, colours = is_going_down(going_down, colours)

        set_picture_colours(pic, pic_name, colours)

        if not (going_down):
            i += 1
            if(colours>20):
                i *= MULTIPLIER
        else:
            i -= 1
            if(colours>20):
                i /= MULTIPLIER


def set_picture_colours(pic, pic_name, colours):
    img = Image.open(pic)
    img = img.convert(mode='P',
                      colors=colours,
                      dither=None,
                      palette=Image.ADAPTIVE)
    img.convert('RGB').save(pic_name)


def is_going_down(max, colours):
    if (colours > 255):
        max = True
        colours = 255
    elif (colours < 2):
        max = False
        colours = 1
        # if (last_colours != colours):
        #   print "-<>-<>rendered!<>-<>-"
    return max, colours


def get_new_name_for(pic):
    pic_name = pic.replace(".jpg", "") + "_3" + ".jpg"
    return pic_name


def fade(pic0,pic1):
    alpha = 0.1
    img0 = Image.open(pic0)
    img1 = Image.open(pic1)

    Image.blend(img0, img1, alpha).show()



OWL_PIC = "owl2.jpg"
OWL_PIC_2 = "owl2_3.jpg"

# rotate()
# blur_image(OWL_PIC)
conv(OWL_PIC)

# fade(OWL_PIC,OWL_PIC_2)
